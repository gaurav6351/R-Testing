{
    "collab_server" : "",
    "contents" : "# Hello, world!\n#\n# This is an example function named 'hello'\n# which prints 'Hello, world!'.\n#\n# You can learn more about package authoring with RStudio at:\n#\n#   http://r-pkgs.had.co.nz/\n#\n# Some useful keyboard shortcuts for package authoring:\n#\n#   Build and Reload Package:  'Ctrl + Shift + B'\n#   Check Package:             'Ctrl + Shift + E'\n#   Test Package:              'Ctrl + Shift + T'\n\nhello <- function() {\n  print(\"Hello, world!\")\n}\n\n\nvec <- c(1,2,3)\nvec\n\nmat<-matrix(vec,3,3)\nmat\n\narr <- array(c(1,2),dim=c(3,3,2))\narr\n\nBMI <- \tdata.frame(\n  gender = c(\"Male\", \"Male\",\"Female\"),\n  height = c(152, 171.5, 165),\n  weight = c(81,93, 78),\n  Age = c(42,38,26)\n)\nprint(BMI)\n\n\nfoo<- list(vec,mat)\nfoo\n\napple <- c('green','red','yelllow','red')\nfactor_apple <- factor(apple)\nfactor_apple\n\n\n# Create a function to print squares of numbers in sequence.\nnew.function <- function(a) {\n  for(i in 1:a) {\n    b <- i^2\n    print(b)\n  }\n}\n\nnew.function(6)\n\n\n# Create vector objects.\ncity <- c(\"Tampa\",\"Seattle\",\"Hartford\",\"Denver\")\nstate <- c(\"FL\",\"WA\",\"CT\",\"CO\")\nzipcode <- c(33602,98104,06161,80294)\n\n# Combine above three vectors into one data frame.\naddresses <- rbind(city,state,zipcode)\naddresses\n\nprint(class(addresses))\n\ndata <- read.csv(\"/home/gaurav/work/titanic/test.csv\")\nprint(data)\n\nprint(class(data))\n\nretval <- subset( data, Sex == \"male\" & Pclass == 3)\nprint(retval)\n\n\nx <- c(21, 62, 10, 53)\nlabels <- c(\"London\", \"New York\", \"Singapore\", \"Mumbai\")\npng(file = \"/home/gaurav/work/titanic/city.jpg\")\n\npie(x, labels, main = \"City pie chart\", col = rainbow(length(x)))\n\nslices <- c(10, 12, 4, 16, 8)\nlbls <- c(\"US\", \"UK\", \"india\", \"Germany\", \"France\")\npct <- round(slices/sum(slices)*100)\nlbls <- paste(lbls, pct) # add percents to labels\nlbls\nlbls <- paste(lbls,\"%\",sep=\"\") # ad % to labels\npie(slices,labels = lbls, col=rainbow(length(lbls)),\n    main=\"Pie Chart of Countries\")\n\nlibrary(plotrix)\nslices <- c(10, 12, 4, 16, 8)\nlbls <- c(\"US\", \"UK\", \"Australia\", \"Germany\", \"France\")\npie3D(slices,labels=lbls,explode=0.1,\n      main=\"Pie Chart of Countries \")\n\nH <- c(7,12,28,3,41)\nM <- c(\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\")\n\nbarplot(H,names.arg = M,xlab = \"Month\",ylab = \"Revenue\",col = \"blue\",\n        main = \"Revenue chart\",border = \"red\")\n\n\ncolors <- c(\"green\",\"orange\",\"brown\")\nmonths <- c(\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\")\nregions <- c(\"East\",\"West\",\"North\")\n\n# Create the matrix of the values.\nValues <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11),nrow = 3,ncol = 5,byrow = TRUE)\n\n# Create the bar chart.\nbarplot(Values,main = \"total revenue\",names.arg = months,xlab = \"month\",ylab = \"revenue\",\n        col = colors)\n\n# Add the legend to the chart.\nlegend(\"topleft\", regions, cex = 1.3, fill = colors)\n\ninput <- mtcars[,c('mpg','cyl')]\nprint(head(input))\n\nboxplot(mpg ~ cyl, data = mtcars, xlab = \"Number of Cylinders\",\n        ylab = \"Miles Per Gallon\", main = \"Mileage Data\")\n\n\n# Create the data for the chart.\nv <- c(7,12,28,3,41)\n\n# Plot the bar chart.\nplot(v,type = \"o\", col = \"red\", xlab = \"Month\", ylab = \"Rain fall\",\n     main = \"Rain fall chart\")\n\n\npairs(~wt+mpg+disp+cyl,data = mtcars,\n      main = \"Scatterplot Matrix\")\n\n\nx <- c(12,7,3,4.2,18,2,54,-21,8,-5)\n\nz <-mean(x,trim = 0.3,na.rm = TRUE)\nz\n\ny <- median(x,na.rm = TRUE)\ny\n\n\nx <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)\ny <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)\n\n# Apply the lm() function.\nrelation <- lm(y~x)\n\nprint(summary(relation))\n\n# Find weight of a person with height 170.\na <- data.frame(x = 170)\nresult <-  predict(relation,a)\nprint(result)\n\n# Plot the chart.\nplot(y,x,col = \"blue\",main = \"Height & Weight Regression\",\n     abline(lm(x~y)),cex = 1.3,pch = 16,xlab = \"Weight in Kg\",ylab = \"Height in cm\")\n\n\ninput <- mtcars[,c(\"mpg\",\"disp\",\"hp\",\"wt\")]\n\n# Create the relationship model.\nmodel <- lm(mpg~disp+hp+wt, data = input)\n\n\n# Show the model.\nprint(model)\n\na <- coef(model)[1]\nprint(a)\n\nXdisp <- coef(model)[2]\nXhp <- coef(model)[3]\nXwt <- coef(model)[4]\n\nprint(Xdisp)\nprint(Xhp)\nprint(Xwt)\n\n\ninput <- mtcars[,c(\"am\",\"cyl\",\"hp\",\"wt\")]\n\nam.data = glm(formula = am ~ cyl + hp + wt, data = input, family = binomial)\n\nprint(summary(am.data))\n\n\n\nlibrary(party)\n\n# Create the input data frame.\ninput.dat <- readingSkills[c(1:105),]\n\n\n# Create the tree.\nout <- ctree(\n  nativeSpeaker ~ age + shoeSize + score,\n  data = input.dat)\n\n# Plot the tree.\nplot(out)\n\n\nlibrary(party)\nlibrary(randomForest)\n\n# Create the forest.\noutput.forest <- randomForest(nativeSpeaker ~ age + shoeSize + score,\n                              data = readingSkills)\n\n# View the forest results.\nprint(output.forest)\nprint(importance(fit,type = 2))\n\ndiamonds\n\nView(iris)\n\nlibrary(dplyr)\n\nlibrary(EDAWR)\n\nlibrary(nycflights13)\n\nlibrary(tidyr)\n\nselect(storms)\n",
    "created" : 1488096514260.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2596647563",
    "id" : "385B3988",
    "lastKnownWriteTime" : 1488390011,
    "last_content_update" : 1488390011808,
    "path" : "~/Test/R/hello.R",
    "project_path" : "R/hello.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}